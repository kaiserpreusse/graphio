# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: tests

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      RUN_ENVIRONMENT: 'github_actions'

    services:
      neo4j35:
        image: neo4j:3.5
        env:
          NEO4J_AUTH: neo4j/test
          NEO4JLABS_PLUGINS: '["apoc"]'
          NEO4J_dbms_security_procedures_unrestricted: gds.*, apoc.*
      neo4j41:
        image: neo4j:4.1
        env:
          NEO4J_AUTH: neo4j/test
          NEO4JLABS_PLUGINS: '["apoc"]'
          NEO4J_dbms_security_procedures_unrestricted: gds.*, apoc.*
      neo4j42:
        image: neo4j:4.2
        env:
          NEO4J_AUTH: neo4j/test
          NEO4JLABS_PLUGINS: '["apoc"]'
          NEO4J_dbms_security_procedures_unrestricted: gds.*, apoc.*
      neo4j43:
        image: neo4j:4.3
        env:
          NEO4J_AUTH: neo4j/test
          NEO4JLABS_PLUGINS: '["apoc"]'
          NEO4J_dbms_security_procedures_unrestricted: gds.*, apoc.*
      neo4j44:
        image: neo4j:4.4
        env:
          NEO4J_AUTH: neo4j/test
          NEO4JLABS_PLUGINS: '["apoc"]'
          NEO4J_dbms_security_procedures_unrestricted: gds.*, apoc.*

    strategy:
      matrix:
        python-container: ["python:3.7", "python:3.8", "python:3.9", "python:3.10"]

    container: ${{ matrix.python-container }}

    steps:
    - uses: actions/checkout@v2
    - name: Install Docker
      run: |
        apt-get update;
        apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common;
        curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -;
        add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable";
        apt-get update;
        apt-cache policy docker-ce;
        apt-get install -y docker-ce;
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f test_requirements.txt ]; then pip install -r test_requirements.txt; fi
    - name: Test with pytest
      run: coverage run --source=graphio -m pytest;
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
