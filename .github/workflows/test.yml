# This workflow runs tests and linting using uv for fast dependency management
# For more information see: https://docs.astral.sh/uv/guides/integration/github/

name: tests

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      RUN_ENVIRONMENT: 'github_actions'

    services:
      neo4j5_community:
        image: neo4j:5-community
        ports:
          - 7687:7687
          - 7474:7474
        env:
          NEO4J_AUTH: neo4j/test
          NEO4J_PLUGINS: '["apoc"]'
          NEO4J_dbms_security_procedures_unrestricted: gds.*, apoc.*
          NEO4J_dbms_security_auth__minimum__password__length: 4
      neo4j5_enterprise:
        image: neo4j:5-enterprise
        ports:
          - 7688:7687
          - 7475:7474
        env:
          NEO4J_AUTH: neo4j/test
          NEO4J_PLUGINS: '["apoc"]'
          NEO4J_dbms_security_procedures_unrestricted: gds.*, apoc.*
          NEO4J_dbms_security_auth__minimum__password__length: 4
          NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
    
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        # Install a specific uv version, or "latest"
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --extra dev
    
    - name: Lint with ruff
      run: |
        uv run ruff check graphio/
    
    - name: Test with pytest
      run: |
        uv run pytest

